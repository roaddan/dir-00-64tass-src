
; 64tass Turbo Assembler Macro V1.52.1237? listing file
; 64tass -C -a -i --list diskerror.txt -o diskerror.prg "/Users/daniel/Documents/Mes Sources/C64/Assembleur/64tass/Sources/Impossible Routines/diskerror.asm"
; Sat Sep  4 21:58:30 2021

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: "/Users/daniel/Documents/Mes Sources/C64/Assembleur/64tass/Sources/Impossible Routines/diskerror.asm"

>0801	0b 08 0a 00			.word (+), 10
>0805	9e 32 30 36 31 00		.null $9e, "2061"
>080b	00 00				+ .word 0

;******  Processing file: "/Users/daniel/Documents/Mes Sources/C64/Assembleur/64tass/Sources/Impossible Routines/c64_map.asm"

=$0286					bascol    = $0286     ;basic next chr colscreenram  = $0400
=$fb					zpage1    = $fb       ;zero page 1 address
=$fd					zpage2    = $fd       ;zero page 2 address
=$00fb					zeropage  = $00fb
=$00fd					zonepage  = $00fd
=$0400					scrnram   = $0400     ;video character ram
=$0400					scrram0   = $0400
=$0500					scrram1   = $0500
=$0600					scrram2   = $0600
=$0700					scrram3   = $0700
=$0801					basicsta  = $0801     ;basic start address
=$a000					basicrom  = $a000
=$d000					vic       = $d000     ;vic base address
=53266					vicscan   = vic+$12   ;vic raster line number
=$d020					vborder   = $d020     ;video border col.
=$d020					framecol  = $d020
=$d021					backgrnd  = $d021
=$d021					vbkgrnd   = $d021     ;video back col.
=$d400					sid       = $d400     ;sid base address
=$d800					colorram  = $d800     ;video color ram
=$d800					colram0   = $d800
=$d900					colram1   = $d900
=$da00					colram2   = $da00
=$db00					colram3   = $db00
=$dc00					cia1      = $dc00     ;cia1  base address
=$dd00					cia2      = $dd00     ;cia2 base address
=$e000					kernalrom = $e000
=$03					bstop     =    $03      ;stop
=$05					bwhite    =    $05      ;set color white
=$08					block     =    $08      ;lock the charset
=$09					bunlock   =    $09      ;unlock the charset
=$0d					bcarret   =    $0d
=$0e					btext     =    $0e
=$11					bcrsdn    =    $11      ;cursor down 1 line
=$12					brevcol   =    $12
=$13					bhome     =    $13
=$14					bdelete   =    $14
=$1c					bred      =    $1c
=$1d					bcuright  =    $1d
=$1e					bgreen    =    $1e
=$1f					bblue     =    $1f
=$81					borange   =    $81
=$83					blrun     =    $83
=$85					bfkey1    =    $85
=$86					bfkey2    =    $86
=$87					bfkey3    =    $87
=$88					bfkey4    =    $88
=$89					bfkey5    =    $89
=$8a					bfkey6    =    $8a
=$8b					bfkey7    =    $8b
=$8c					bfkey8    =    $8c
=$8d					bcarret1  =    $8d
=$8e					bgraph    =    $8e
=$90					bblack    =    $90
=$91					bcuup     =    $91
=$92					brevoff   =    $92
=$93					bclear    =    $93
=$94					binsert   =    $94
=$95					bbrown    =    $95
=$96					bltred    =    $96
=$97					bdkgrey   =    $97
=$98					bmdgrey   =    $98
=$99					bltgreen  =    $99
=$9a					bltblue   =    $9a
=$9b					bltgrey   =    $9b
=$9c					bmagenta  =    $9c
=$9d					bculeft   =    $9d
=$9e					byellow   =    $9e
=$9f					bcyan     =    $9f
=$0286					carcol  = $0286
=$030a					ieval   = $030a
=$73					chrget  = $73
=$79					chrgot  = $79
=$0					cnoir       = $0
=$1					cblanc      = $1
=$2					crouge      = $2
=$3					cocean      = $3
=$4					cmauve      = $4
=$5					cvert       = $5
=$6					cbleu       = $6
=$7					cjaune      = $7
=$8					corange     = $8
=$9					cbrun       = $9
=$a					crose       = $a
=$b					cgrisfonce  = $b
=$c					cgrismoyen  = $c
=$d					cvertpale   = $d
=$e					cbleupale   = $e
=$f					cgrispale   = $f
=$0					cblack      = $0
=$1					cwhite      = $1
=$2					cred        = $2
=$3					ccyan       = $3
=$4					cpurple     = $4
=$5					cgreen      = $5
=$6					cblue       = $6
=$7					cyellow     = $7
=$9					cbrown      = $9
=$a					clightred   = $a
=$b					cdarkgray   = $b
=$c					cmidgray    = $c
=$d					clightgreen = $d
=$e					clightblue  = $e
=$f					clightgray  = $f
=$00					vnoir     =    %00000000
=$00					vblack    =    %00000000
=$01					vblanc    =    %00000001
=$01					vwhite    =    %00000001
=$02					vrouge    =    %00000010
=$02					vred      =    %00000010
=$03					vocean    =    %00000011
=$03					vcyan     =    %00000011
=$04					vmauve    =    %00000100
=$04					vpurple   =    %00000100
=$05					vvert     =    %00000101
=$05					vgreen    =    %00000101
=$06					vbleu     =    %00000110
=$06					vblue     =    %00000110
=$07					vjaune    =    %00000111
=$07					vyellow   =    %00000111
=$08					vorange   =    %00001000
=$09					vbrun     =    %00001001
=$09					vbrown    =    %00001001
=$0a					vrose     =    %00001010
=$0a					vpink     =    %00001010
=$0b					vgris     =    %00001011
=$0b					vgray     =    %00001011
=$0b					vgrey     =    %00001011
=$0c					vgris1    =    %00001100
=$0c					vgray1    =    %00001100
=$0c					vgrey1    =    %00001100
=$0d					vvert1    =    %00001101
=$0d					vgreen1   =    %00001101
=$0e					vbleu1    =    %00001110
=$0e					vblue1    =    %00001110
=$0f					vgris2    =    %00001111
=$0f					vgray2    =    %00001111
=$0f					vgrey2    =    %00001111
=$ff81					cint    = $ff81 ; ($ff5b) Initialize the screen editor and vic-ii chip
=$ff84					ioinit  = $ff84 ; ($fda3) Initialize i/o devices.
=$ff87					ramtas  = $ff87 ; ($fd50) Initialise ram, tape buffer and screen.
=$ff8a					restor  = $ff8a ; ($fd15) Restore default I/O vectors.
=$ff8d					vector  = $ff8d ; ($fd1a) Read/set I/O vectors.
=$ff90					setmsg  = $ff90 ; ($fe18) Set kernal message output flag
=$ff93					second  = $ff93 ; ($edb9) Send secondary address after listen
=$ff96					tksa    = $ff96 ; ($edc7) Send a secondary address to a device commanded to talk
=$ff99					memtop  = $ff99 ; ($fe25) Get/Set top of ram
=$ff9c					membot  = $ff9c ; ($fe34) Get/set bottom of memory.
=$ff9f					scnkey  = $ff9f ; $(ea87) Scan the keyboard
=$ffa2					settmo  = $ffa2 ; ($fe21) Set ieee bus card timeout flag
=$ffa5					acptr   = $ffa5 ; ($ee13) recoit un caractÃ¨re provenant du port serie
=$ffa8					ciout   = $ffa8 ; ($eddd) Transmit a byte over the serial bus
=$ffab					untlk   = $ffab ; ($edef) Send an untalk command
=$ffae					unlsn   = $ffae ; ($edfe) Send an unlisten command
=$ffb1					listen  = $ffb1 ; ($ed0c) Command a device on the serial bus to listen.
=$ffb4					talk    = $ffb4 ; ($ed09) Command a device on the serial bus to talk
=$ffb7					readst  = $ffb7 ; ($fe07) Read status word
=$ffba					setlfs  = $ffba ; ($fe00) Set up a logical file
=$ffbd					setnam  = $ffbd ; ($fdf9) Set up file name
=$ffc0					open    = $ffc0 ; ($f3a4) Open a logical file
=$ffc3					close   = $ffc3 ; ($f291) Close a logical file
=$ffc6					chkin   = $ffc6 ; ($f20e) Define an input channel.
=$ffc9					chkout  = $ffc9 ; ($f250) Define an output channel.
=$ffcc					clrchn  = $ffcc ; ($f333) - Clear all i/o channels.
=$ffcf					chrin   = $ffcf ; ($f157) Get a character from the input channel
=$ffd2					chrout  = $ffd2 ; ($f1ca) Output a character
=$ffd5					load    = $ffd5 ; ($f49e) Load device to RAM.
=$ffd8					save    = $ffd8 ; ($f5dd) Save memory to a device.
=$ffdb					settim  = $ffdb ; ($f6e4) Set the system clock.
=$ffde					rdtim   = $ffde ; ($f6dd) Read system clock
=$ffe1					stop    = $ffe1 ; ($f6ed) Check if stop key is pressed
=$ffe4					getin   = $ffe4 ; ($f13e) Get a character.
=$ffe7					clall   = $ffe7 ; ($f32f) Close all open files
=$ffea					udtim   = $ffea ; ($f69b) Update the system clock
=$ffed					screen  = $ffed ; ($e505) Return screen format
=$fff0					plot    = $fff0 ; ($e50a) Set or retrieve cursor location x=column, y=line
=$fff3					iobase  = $fff3 ; ($e500) Define i/o memory page
=$ff81					kcint     =    cint      ;   , init vic + ecran.
=$ff84					kioinit   =    ioinit    ;   , init i/o dev.
=$ff87					kramtas   =    ramtas    ;   , test de memoire.
=$ffa8					kciout    =    ciout     ;a  ,tx byte  acia
=$ff8a					krestor   =    restor    ;   , set ram plafond
=$ff8d					kvector   =    vector    ;
=$ff90					ksetmsg   =    setmsg    ;a  , set sys. msg. out
=$ff93					ksecond   =    second    ;a  , tx adresse sec.
=$ff96					ktksa     =    tksa      ;a  , talk adresse sec.
=$ff99					kmemtop   =    memtop    ; yx, (c) get mem high
=$ff9c					kmembot   =    membot    ; yx, (c) get mem low
=$ff9f					kscnkey   =    scnkey    ;   , scan clavier
=$ffa2					ksettmo   =    settmo    ;a  , set ieee timeout
=$ffa5					kacptr    =    acptr     ;a  ,rx serie.
=$ffab					kuntlk    =    untlk    ;   , iec-cmc stop talk
=$ffae					kunlsn    =    unlsn     ;   , iec-cmd stop lsn
=$ffb1					klisten   =    listen    ;a  , iec-cmd dev ecout
=$ffb4					ktalk     =    talk      ;a  , iec-cmd dev parle
=$ffb7					kreadst   =    readst    ;a  , lecture i/o stats
=$ffba					ksetlfs   =    setlfs    ;ayx, init fich logi.
=$ffbd					ksetnam   =    setnam    ;ayx, init num.nom.fich
=$ffc0					kopen     =    open      ;axy, ouvre fich-nom
=$ffc3					kclose    =    close     ;a  , ferme fichier #a.
=$ffc6					kchkin    =    chkin     ;  x,open canal in.
=$ffc9					kchkout   =    chkout    ;  x,open canal out
=$ffcc					kclrchn   =    clrchn    ;   , ferme canaux i/o.
=$ffcf					kchrin    =    chrin     ;a  ,recup. un car.
=$ffd2					kchrout   =    chrout    ;a  ,sort un car.
=$ffd5					kload     =    load      ;ayx, dev->ram
=$ffd8					ksave     =    save      ;   , sauve mem->dev
=$ffdb					ksettim   =    settim    ;axy, init sysclock
=$ffde					krdtim    =    rdtim     ;axy, lecture sysclock
=$ffe1					kstop     =    stop      ;a  , ret. stopkey stat
=$ffe4					kgetin    =    getin     ;a  , recup. car. #dev.
=$ffe7					kclall    =    clall     ;   , ferme fichiers.
=$ffea					kudtim    =    udtim     ;   , maj sysclock
=$ffed					kscreen   =    screen    ; yx, get format ecran
=$fff0					kplot     =    plot      ; yx, (c) get csr pos.
=$fff3					kiobase   =    iobase    ; yx, def. i/o mem page
=0					kerr00 = 0      ; routine ended by the stop key.
=1					kerr01 = 1      ; too many files open.
=2					kerr02 = 2      ; file already open.
=3					kerr03 = 3      ; file not open.
=4					kerr04 = 4      ; file not found.
=5					kerr05 = 5      ; device not present.
=6					kerr06 = 6      ; file is not an input file.
=7					kerr07 = 7      ; file is not an output file.
=8					kerr08 = 8      ; file name is missing.
=9					kerr09 = 9      ; illegal device number.
=240					kerrf0 = 240    ; top-of-memory change rs-232 buffer allocation.
.080d	20 11 08	jsr $0811	pgmstart        jsr     main            ; le programme principale
.0810	60		rts		                rts                     ; doit s'appeler "main"

;******  Return to file: "/Users/daniel/Documents/Mes Sources/C64/Assembleur/64tass/Sources/Impossible Routines/diskerror.asm"

.0811	20 2c 01	jsr $012c	main            jsr   diskerror
.0814	60		rts		                rts
.012c					diskerror
.012c	a9 08		lda #$08	                lda     #$08    ; Select device 8
.012e	85 ba		sta $ba		                sta     $ba     ;
.0130	20 b4 ff	jsr $ffb4	                jsr     $ffb4   ;ktalk          |a  , iec-cmd dev parle
.0133	a9 6f		lda #$6f	                lda     #$6f
.0135	85 b9		sta $b9		                sta     $b9
.0137	20 96 ff	jsr $ff96	                jsr     $ff96   ;ktksa          |a  , talk adresse sec.
.013a	20 a5 ff	jsr $ffa5	nextchar        jsr     $ffa5   ;kacptr         |A  , rx serie.
.013d	20 d2 ff	jsr $ffd2	                jsr     $ffd2   ;kchrout        |a  , sort un car.
.0140	c9 0d		cmp #$0d	                cmp     #$0d    ;Is it CR ?
.0142	d0 f6		bne $013a	                bne     nextchar   ; No, get next char
.0144	20 ab ff	jsr $ffab	                jsr     $ffab   ;kuntlk            , iec-cmc stop talk
.0147	60		rts		                rts

;******  End of listing
