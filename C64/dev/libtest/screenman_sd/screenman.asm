*= $801.word (+), 10.null $9e, "2061"+ .word 0;---------------------------------------------------------------------;;---------------------------------------------------------------------          .include "c64map.asm"          .include "butils.asm"          .include "hexutils.asm"          .include "initnmi.asm"          .include "memutils.asm"          .include "showregs.asm"          .include "sutils.asm"          .include "joystick.asm"main                .block          jmp init          .enc screen  ; Encodage Ã©cran du texte.bstring1  .byte vvert1bstringp  .byte 6,0        bstrings  .text "Visualisation des registres"          .byte 0bstring2  .byte vjaune,6,1          .text "    en assembleur 6502.    "          .byte 0bstring3  .byte 5,9,4          .text "Ceci est en couleur 5."          .byte 0bstring4  .byte 1,10,22          .text "Par Daniel Lafrance."          .byte 0init               ;jsr initnmi          jsr  scls          lda  #23          sta  53272          lda  #15          sta  curcol          lda  #vnoir          sta  bakcol          lda  #vblanc          sta  brdcol          jsr  scls;         lda  #1;         ldx  #0;         ldy  #2;         ;nextcar  stx  curcol;         jsr  sputch;         inx;         cpx  #0;         bne  nextcar;         dey;         bpl  nextcar           ldx  #01          ldy  #01goagain   jsr  sgotoxy          ldx  #<bstring1           ldy  #>bstring1          jsr  sputscxy          ldx  #<bstring2           ldy  #>bstring2          jsr  sputscxy          jsr  ssetinverse          ldy  #$00another   tya          sta  bstring3          jsr  nib2hex          sta  bstring3+23          tya          ldx  #<bstring3           ldy  #>bstring3          jsr  sputscxy          inc  bstring3+2          tay          iny          cpy  #$10          bne  another          jsr  sclrinverse          ldx  #<bstring4           ldy  #>bstring4          jsr  sputscxy          ldx  #0          ldy  #0          lda  #1          jsr  showregs          ;addagain  jsr  adda2xy;          jsr  showregs;          cpy  #$00;          bne  addagain;          clc;          adc  #1;          and  #$0f;          bne  addagainlooper              php          phascanit    lda  vicscan          cmp  #250          bne  scanit          lda  #vrouge          sta  $d020               pla          plp;          clc;          adc  #1;          jsr  adda2xy;          jsr  showregs;          php          ;          pha;          txa;          pha;          tya;          pha;          inc  bstring4;          lda  bstring4;          and  #%00001111;          sta  bstring4;          ;dec  $d020;          ldx  #<bstring4 ;          ldy  #>bstring4;          jsr  sputscxy;          ;inc  $d020;          pla;          tay;          pla;          tax;          pla;          plp          clc          adc  #1          jmp  mille                    *=$3000mille          pha          sec          jsr  adda2xy          jsr  showregs          clc          plahere      ;jmp  here          inc  $d020          jmp  looperout       rts          .bend